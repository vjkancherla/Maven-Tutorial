===================================
MAVEN AND TRANSITIVE DEPENDENCIES 
====================================

READ THIS: https://reflectoring.io/maven-bom/

Let’s see in detail how Maven deals with transitive dependencies in a project.

As an example, we’ll look at two dependencies from the Spring Framework: spring-context and spring-security-web.

In the pom.xml file we add them as direct dependencies, DELIBERATELY SELECTING TWO DIFFERENT VERSION NUMBERS:

    ----
    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>5.3.5</version> <----- NOTE THIS VERSION
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>5.4.5</version> <------ NOTE THIS VERSION
        </dependency>
    </dependencies>
    ----


Visualize Version Conflicts with a Dependency Tree
-----------------------------------------------------
We can list all the dependencies including the transitive ones using this command:

>> mvn dependency:tree -Dverbose=true

-----
+- org.springframework:spring-context:jar:5.3.5:compile
|  +- org.springframework:spring-aop:jar:5.3.5:compile
|  |  +- (org.springframework:spring-beans:jar:5.3.5:compile - omitted for duplicate)
|  |  \- (org.springframework:spring-core:jar:5.3.5:compile - omitted for duplicate)
|  +- org.springframework:spring-beans:jar:5.3.5:compile
|  |  \- (org.springframework:spring-core:jar:5.3.5:compile - omitted for duplicate)
...
   +- (org.springframework:spring-expression:jar:5.2.13.RELEASE:compile - omitted for conflict with 5.3.5)
   \- org.springframework:spring-web:jar:5.2.13.RELEASE:compile
      +- (org.springframework:spring-beans:jar:5.2.13.RELEASE:compile - omitted for conflict with 5.3.5)
      \- (org.springframework:spring-core:jar:5.2.13.RELEASE:compile - omitted for conflict with 5.3.5)
-----

We started from two dependencies, and in this output, we find out that Maven pulled additional dependencies. 
These additional dependencies are simply transitive.

We can see that there are different versions of the same dependency in the tree. 
For example, there are two versions of the spring-beans dependency:5.2.13.RELEASE and 5.3.5.

***Maven has resolved this version conflict, but how? What does omitted for duplicate and omitted for conflict mean?***


How Does Maven Resolve Version Conflicts?
---------------------------------------------
