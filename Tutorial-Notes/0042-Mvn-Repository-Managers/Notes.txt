======================
REPOSITORY MANAGERS
======================

- Maven repository managers serve as a centralized hub for managing and distributing software artifacts.

- Popular Maven repository managers include: 
    - Nexus Repository Manager (by Sonatype)
    - Artifactory (by JFrog)
    - Archiva (by Apache)


Repository managers offer several advantages:

    - Proxy External Repositories: 
        - They can act as intermediaries between developers and the public Maven Central repository, caching artifacts and 
          reducing the need for repeated external requests.
        - When you proxy a remote repository, you repository manager accepts requests for artifacts from clients. 
          If the artifact is not already cached, the repository manager will retrieve the artifact from the remote repository and 
          cache the artifact. Subsequent requests for the same artifact will be served from the local cache.
    
    - Performance: 
        They cache artifacts locally, so repeated downloads of the same artifact are avoided. 
        This speeds up the build and deployment process.

    - Consistency: 
        Ensure that all developers and environments use the same version of dependencies, avoiding the "it works on my machine" syndrome.

    - Security: 
        They can restrict which artifacts are available, ensuring that only approved libraries are used. 
        They also often have built-in vulnerability scanning.

    - Integration: 
        They can be integrated into CI/CD pipelines, ensuring that artifacts built by the CI server are stored and managed centrally.

    - Storage: 
        Store the artifacts generated by your organization, making them available for distribution or deployment.

    - Version Management: 
        Store multiple versions of an artifact, allowing easy rollback or version testing.

    